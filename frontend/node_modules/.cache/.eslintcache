[{"/home/pranav/git-repos/deck-edit/src/index.js":"1","/home/pranav/git-repos/deck-edit/src/App.js":"2","/home/pranav/git-repos/deck-edit/src/reportWebVitals.js":"3","/home/pranav/git-repos/deck-edit/src/components/RowSelection.js":"4","/home/pranav/git-repos/deck-edit/src/components/columns.js":"5","/home/pranav/git-repos/deck-edit/src/components/Checkbox.js":"6","/home/pranav/git-repos/deck-edit/src/components/FieldSelf.js":"7","/home/pranav/git-repos/deck-edit/src/components/FieldOpponent.js":"8","/home/pranav/git-repos/deck-edit/src/components/Self.js":"9","/home/pranav/git-repos/deck-edit/src/components/Opponent.js":"10","/home/pranav/git-repos/deck-edit/src/components/Hand.js":"11","/home/pranav/git-repos/deck-edit/src/components/Card.js":"12","/home/pranav/git-repos/deck-edit/src/components/Board.js":"13"},{"size":530,"mtime":1638913056090,"results":"14","hashOfConfig":"15"},{"size":1248,"mtime":1638922457649,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1638764594000,"results":"17","hashOfConfig":"15"},{"size":2974,"mtime":1638921554987,"results":"18","hashOfConfig":"15"},{"size":1483,"mtime":1638814226000,"results":"19","hashOfConfig":"15"},{"size":393,"mtime":1638766306000,"results":"20","hashOfConfig":"15"},{"size":753,"mtime":1638909030591,"results":"21","hashOfConfig":"15"},{"size":785,"mtime":1638909030492,"results":"22","hashOfConfig":"15"},{"size":548,"mtime":1638909030784,"results":"23","hashOfConfig":"15"},{"size":580,"mtime":1638909030729,"results":"24","hashOfConfig":"15"},{"size":713,"mtime":1638909030671,"results":"25","hashOfConfig":"15"},{"size":637,"mtime":1638909030334,"results":"26","hashOfConfig":"15"},{"size":1635,"mtime":1638931326712,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"1ulhcxs",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"31"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"/home/pranav/git-repos/deck-edit/src/index.js",["65"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nvar active = true;\n\n\n\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />\n // </React.StrictMode>,\n ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["66","67"],"/home/pranav/git-repos/deck-edit/src/App.js",["68"],"//import React from 'react'\nimport React, { useEffect, useState } from \"react\";\n//import './App.css'\nimport { RowSelection } from './components/RowSelection'\n// import FieldSelf from './components/FieldSelf'\n// import FieldOpponent from './components/FieldOpponent'\n// import Opponent from './components/Opponent'\n// import Self from './components/Self'\n// import Hand from './components/Hand'\nimport Board from './components/Board'\n\n\n\n\n\n function App(props) {\n // class App extends React.Component {\n\n    // state = {\n    //   uuid: \"\",\n    //  }\n    //  handleCallback = (childData) =>{\n    //   this.setState({uuid: childData});\n    //   console.log(this.state.uuid);\n    // }\n\n    //  componentDidMount() {\n    //     console.log(uuid);\n    // }\n\n    \n  const [data, setData] = useState('');\n // const [testdata, setTestData] = useState('');\n  \n  const childToParent = (childdata) => {\n    setData(childdata);\n    console.log(childdata);\n  }\n\n  \n \n    \n    \n    //render(){\n      return (\n        <div>\n        <div className='App'>\n          <RowSelection childToParent={childToParent}/>\n        </div>\n        <div>\n        <Board parentToChild={data} />\n\n        </div>\n        </div>\n        \n      )\n    }\n  \n  \n  \n//}\n\nexport default App\n","/home/pranav/git-repos/deck-edit/src/reportWebVitals.js",[],"/home/pranav/git-repos/deck-edit/src/components/RowSelection.js",["69","70","71","72"],"import React, { useMemo, useState } from 'react'\nimport ReactTable from 'react-table'\nimport { useTable, useRowSelect } from 'react-table'\nimport CARD_DATA from './carddata.json'\nimport { COLUMNS } from './columns'\nimport './table.css'\nimport { Checkbox } from './Checkbox'\nimport axios from 'axios'\nimport index from '../index'\n\n\n\n\nexport const RowSelection = ({childToParent}) => {\n  const columns = useMemo(() => COLUMNS, [])\n  const data = useMemo(() => CARD_DATA, [])\n \n  const dataToSend = \"This is data from Child Component to the Parent Component.\"\n  \n\n  function handleClick() {\n    console.log(selectedFlatRows.map(row => row.original));\n    \n    console.log(\"Button Clicked\");\n    axios.post('http://localhost:8080/game/games/deck', selectedFlatRows.map(row => row.original)).then(function (response) {\n        console.log(response.data.uuid);\n        childToParent(response.data.uuid);\n        \n        \n        \n      })\n    axios.get('http://localhost:8080/game/users/garg.pranav@gmail.com').then(function (response) { console.log(response)} );\n    //axios.get('http://localhost:8080/game').then(function (response) { console.log(response.uuid)} );\n    \n   \n    \n    \n    \n    \n  }\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    selectedFlatRows // gives flat array of rows that are selected\n  } = useTable(\n    {\n      columns,\n      data\n    },\n    useRowSelect,\n    hooks => {\n      hooks.visibleColumns.push(columns => [\n        {\n          id: 'selection',\n          Header: ({ getToggleAllRowsSelectedProps }) => (\n            <Checkbox {...getToggleAllRowsSelectedProps()} />\n          ),\n          Cell: ({ row }) => <Checkbox {...row.getToggleRowSelectedProps()} />\n        },\n        ...columns\n      ])\n    }\n  )\n\n  const listOfCards = rows.slice(0, 30) // 30 data rows\n\n \n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {listOfCards.map(row => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n\n      <pre> \n        <code>\n          {JSON.stringify( \n            { // printing each selected row to the browser\n              selectedFlatRows: selectedFlatRows.map(row => row.original)\n            },\n            null,\n            2\n          )}\n        </code>\n      </pre>\n      <button onClick={handleClick}>Submit Deck</button>\n    </>\n    \n  )\n         \n}","/home/pranav/git-repos/deck-edit/src/components/columns.js",["73"],"import { format } from 'date-fns'\n\nexport const COLUMNS = [\n  {\n    Header: 'Id',\n    Footer: 'Id',\n    accessor: 'id',\n    disableFilters: true,\n    sticky: 'left'\n  },\n  {\n    Header: 'Card Name',\n    Footer: 'Card Name',\n    accessor: 'card_name',\n    sticky: 'left'\n  },\n  // {\n  //   Header: 'Type',\n  //   Footer: 'Type',\n  //   accessor: 'type',\n  //   sticky: 'left'\n  // },\n  {\n    Header: 'Mana Cost',\n    Footer: 'Mana Cost',\n    accessor: 'mana_cost'\n  },\n  {\n    Header: 'Attack',\n    Footer: 'Attack',\n    accessor: 'attack'\n  },\n  {\n    Header: 'Health',\n    Footer: 'Health',\n    accessor: 'health'\n  },\n  // {\n  //   Header: 'Durability',\n  //   Footer: 'Durability',\n  //   accessor: 'durability'\n  // },\n]\n\nexport const GROUPED_COLUMNS = [\n  {\n    Header: 'Id',\n    Footer: 'Id',\n    accessor: 'id'\n  },\n  {\n    Header: 'Name',\n    Footer: 'Name',\n    columns: [\n      {\n        Header: 'First Name',\n        Footer: 'First Name',\n        accessor: 'first_name'\n      },\n      {\n        Header: 'Last Name',\n        Footer: 'Last Name',\n        accessor: 'last_name'\n      }\n    ]\n  },\n  {\n    Header: 'Info',\n    Footer: 'Info',\n    columns: [\n      {\n        Header: 'Date of Birth',\n        Footer: 'Date of Birth',\n        accessor: 'date_of_birth'\n      },\n      {\n        Header: 'Country',\n        Footer: 'Country',\n        accessor: 'country'\n      },\n      {\n        Header: 'Phone',\n        Footer: 'Phone',\n        accessor: 'phone'\n      }\n    ]\n  }\n]","/home/pranav/git-repos/deck-edit/src/components/Checkbox.js",[],"/home/pranav/git-repos/deck-edit/src/components/FieldSelf.js",["74"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Card from './Card'\nconst FieldSelf = ({ life, mana }) => {\n    return (\n        <fieldSelf class='fieldSelf'>\n            <Card name = 'TEST ' atk = '1' def = '1' mana = '3'/>\n            <Card name = 'TEST ' atk = '1' def = '1'/>\n            <Card name = 'TEST ' atk = '1' def = '1'/>\n            <Card name = 'TEST ' atk = '1' def = '1'/>\n        </fieldSelf>\n        \n    )\n}\n\nFieldSelf.defaultProps = {\n    life: '20',\n    mana: '1'\n}\n\n//just for reference\nFieldSelf.propTypes = {\n    life: PropTypes.number.isRequired,\n    mana: PropTypes.number.isRequired\n}\n\n//FieldSelf!!! STYLE\nconst headingStyle = {\n    color: 'black',\n    backgroundColor: 'white'\n}\n\nexport default FieldSelf","/home/pranav/git-repos/deck-edit/src/components/FieldOpponent.js",["75"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Card from './Card'\nconst FieldOpponent = ({ life, mana }) => {\n    return (\n        <fieldOpponent class='fieldOpponent'>\n            <Card name = 'TEST ' atk = '1' def = '1' mana = '3'/>\n            <Card name = 'TEST ' atk = '1' def = '1'/>\n            <Card name = 'TEST ' atk = '1' def = '1'/>\n            <Card name = 'TEST ' atk = '1' def = '1'/>\n        </fieldOpponent>\n        \n    )\n}\n\nFieldOpponent.defaultProps = {\n    life: '20',\n    mana: '1'\n}\n\n//just for reference\nFieldOpponent.propTypes = {\n    life: PropTypes.number.isRequired,\n    mana: PropTypes.number.isRequired\n}\n\n//FieldOpponent!!! STYLE\nconst headingStyle = {\n    color: 'black',\n    backgroundColor: 'white'\n}\n\nexport default FieldOpponent","/home/pranav/git-repos/deck-edit/src/components/Self.js",["76"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Card from './Card'\nconst Self = ({ life, mana }) => {\n    return (\n        <self class='self'>\n            <Card name = 'TEST ' atk = '1' def = '1' mana = '3'/>\n        </self>\n        \n    )\n}\n\nSelf.defaultProps = {\n    life: '20',\n    mana: '1'\n}\n\n//just for reference\nSelf.propTypes = {\n    life: PropTypes.number.isRequired,\n    mana: PropTypes.number.isRequired\n}\n\n//Self!!! STYLE\nconst headingStyle = {\n    color: 'black',\n    backgroundColor: 'white'\n}\n\nexport default Self","/home/pranav/git-repos/deck-edit/src/components/Opponent.js",["77"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Card from './Card'\nconst Opponent = ({ life, mana }) => {\n    return (\n        <opponent class='opponent'>\n            <Card name = 'TEST ' atk = '1' def = '1' mana = '3'/>\n        </opponent>\n        \n    )\n}\n\nOpponent.defaultProps = {\n    life: '20',\n    mana: '1'\n}\n\n//just for reference\nOpponent.propTypes = {\n    life: PropTypes.number.isRequired,\n    mana: PropTypes.number.isRequired\n}\n\n//Opponent!!! STYLE\nconst headingStyle = {\n    color: 'black',\n    backgroundColor: 'white'\n}\n\nexport default Opponent","/home/pranav/git-repos/deck-edit/src/components/Hand.js",["78"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Card from './Card'\nconst Hand = ({ life, mana }) => {\n    return (\n        <hand class='hand'>\n            <Card name = 'TEST ' atk = '1' def = '1' mana = '3'/>\n            <Card name = 'TEST ' atk = '1' def = '1'/>\n            <Card name = 'TEST ' atk = '1' def = '1'/>\n            <Card name = 'TEST ' atk = '1' def = '1'/>\n        </hand>\n        \n    )\n}\n\nHand.defaultProps = {\n    life: '20',\n    mana: '1'\n}\n\n//just for reference\nHand.propTypes = {\n    life: PropTypes.number.isRequired,\n    mana: PropTypes.number.isRequired\n}\n\n//Hand!!! STYLE\nconst headingStyle = {\n    color: 'black',\n    backgroundColor: 'white'\n}\n\nexport default Hand","/home/pranav/git-repos/deck-edit/src/components/Card.js",[],"/home/pranav/git-repos/deck-edit/src/components/Board.js",["79","80","81"],"\nimport FieldSelf from './FieldSelf'\nimport FieldOpponent from './FieldOpponent'\nimport Opponent from './Opponent'\nimport Self from './Self'\nimport Hand from './Hand'\nimport React, {Component} from 'react'\nimport axios from 'axios'\nimport { isConstructorDeclaration } from 'typescript'\n\n\n\n\nclass Board extends React.Component { \n//  function Board({parentToChild}){\n  constructor(props) {\n    super(props);\n    this.state = {game: ''};\n    this.getGame = this.getGame.bind(this);\n  }\n\n    componentDidMount() {\n        this.timer = setInterval(()=> this.getGame(), 1000);\n        console.log(this.props.parentToChild);\n        \n      }\n    \n    //   componentWillUnmount() {\n    //     this.timer = null;\n    //   }\n\n      \n    \n      getGame() {\n        \n        // if(this.props.parentToChild != ''){\n        //   let url = `http://localhost:8080/game/games/${this.props.parentToChild}`;\n        //   axios.get(`${url}`).then(function (response) { console.log(response); this.setState({game: response}); } );\n        // }\n        if(this.props.parentToChild != ''){\n          let url = `http://localhost:8080/game/games/${this.props.parentToChild}`;\n          axios.get(`${url}`).then( response => { console.log(response); this.setState({game: response}); } );\n        }\n        \n        console.log(this.state.game);\n      }\n\n    render(props) {\n      return (<header className=\"App-header\">\n      <div className='container'>\n        <Opponent/>\n        <FieldOpponent/>\n        <FieldSelf/>\n        <Self/>\n      </div>\n      <div className='container'>\n        <Hand/>\n      </div>\n    </header>);\n    }\n  }\n  export default Board",{"ruleId":"82","severity":1,"message":"83","line":7,"column":5,"nodeType":"84","messageId":"85","endLine":7,"endColumn":11},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"82","severity":1,"message":"90","line":2,"column":17,"nodeType":"84","messageId":"85","endLine":2,"endColumn":26},{"ruleId":"82","severity":1,"message":"91","line":1,"column":26,"nodeType":"84","messageId":"85","endLine":1,"endColumn":34},{"ruleId":"82","severity":1,"message":"92","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":18},{"ruleId":"82","severity":1,"message":"93","line":9,"column":8,"nodeType":"84","messageId":"85","endLine":9,"endColumn":13},{"ruleId":"82","severity":1,"message":"94","line":18,"column":9,"nodeType":"84","messageId":"85","endLine":18,"endColumn":19},{"ruleId":"82","severity":1,"message":"95","line":1,"column":10,"nodeType":"84","messageId":"85","endLine":1,"endColumn":16},{"ruleId":"82","severity":1,"message":"96","line":28,"column":7,"nodeType":"84","messageId":"85","endLine":28,"endColumn":19},{"ruleId":"82","severity":1,"message":"96","line":28,"column":7,"nodeType":"84","messageId":"85","endLine":28,"endColumn":19},{"ruleId":"82","severity":1,"message":"96","line":25,"column":7,"nodeType":"84","messageId":"85","endLine":25,"endColumn":19},{"ruleId":"82","severity":1,"message":"96","line":25,"column":7,"nodeType":"84","messageId":"85","endLine":25,"endColumn":19},{"ruleId":"82","severity":1,"message":"96","line":28,"column":7,"nodeType":"84","messageId":"85","endLine":28,"endColumn":19},{"ruleId":"82","severity":1,"message":"97","line":7,"column":16,"nodeType":"84","messageId":"85","endLine":7,"endColumn":25},{"ruleId":"82","severity":1,"message":"98","line":9,"column":10,"nodeType":"84","messageId":"85","endLine":9,"endColumn":34},{"ruleId":"99","severity":1,"message":"100","line":40,"column":37,"nodeType":"101","messageId":"102","endLine":40,"endColumn":39},"no-unused-vars","'active' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'ReactTable' is defined but never used.","'index' is defined but never used.","'dataToSend' is assigned a value but never used.","'format' is defined but never used.","'headingStyle' is assigned a value but never used.","'Component' is defined but never used.","'isConstructorDeclaration' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]