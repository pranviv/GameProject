{"ast":null,"code":"var _jsxFileName = \"/home/pranav/git-repos/deck-edit/src/components/Checkbox.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Checkbox = /*#__PURE__*/React.forwardRef(_c = _s((_ref, ref) => {\n  _s();\n\n  let {\n    indeterminate,\n    ...rest\n  } = _ref;\n  const defaultRef = React.useRef();\n  const resolvedRef = ref || defaultRef;\n  React.useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      ref: resolvedRef,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}, \"ouw4KVvDKeit07oEcYWUcp3TdOA=\"));\n_c2 = Checkbox;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Checkbox$React.forwardRef\");\n$RefreshReg$(_c2, \"Checkbox\");","map":{"version":3,"sources":["/home/pranav/git-repos/deck-edit/src/components/Checkbox.js"],"names":["React","Checkbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAO,MAAMC,QAAQ,gBAAGD,KAAK,CAACE,UAAN,SAAiB,OAA6BC,GAA7B,KAAqC;AAAA;;AAAA,MAApC;AAAEC,IAAAA,aAAF;AAAiB,OAAGC;AAApB,GAAoC;AAC5E,QAAMC,UAAU,GAAGN,KAAK,CAACO,MAAN,EAAnB;AACA,QAAMC,WAAW,GAAGL,GAAG,IAAIG,UAA3B;AAEAN,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpBD,IAAAA,WAAW,CAACE,OAAZ,CAAoBN,aAApB,GAAoCA,aAApC;AACD,GAFD,EAEG,CAACI,WAAD,EAAcJ,aAAd,CAFH;AAIA,sBACE;AAAA,2BACE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,GAAG,EAAEI,WAA5B;AAAA,SAA6CH;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAbuB,kCAAjB;MAAMJ,Q","sourcesContent":["import React from 'react'\n\nexport const Checkbox = React.forwardRef(({ indeterminate, ...rest }, ref) => {\n  const defaultRef = React.useRef()\n  const resolvedRef = ref || defaultRef\n\n  React.useEffect(() => {\n    resolvedRef.current.indeterminate = indeterminate\n  }, [resolvedRef, indeterminate])\n\n  return (\n    <>\n      <input type='checkbox' ref={resolvedRef} {...rest} />\n    </>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}